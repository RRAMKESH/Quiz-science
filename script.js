<script>
let currentQuestion = 0;
let score = 0;
let timer;
let timeLeft = 60;
const questions = [
   {
    "question": "?????????? ??? ?? ???-?? ?? ???? ??? ?? ??? ??? ?? ????? ?? ?",
    "options": ["???? ??????", "??????", "????????? ??????", "????? ??????"],
    "answer": 2
  },
  {
    "question": "???? ??? ?????? ??? ?????????? ??? ?? ??? ?????? ?? ????? ???? ?? ?",
    "options": ["????", "?????", "???? ?? ?????", "????? ?? ??? ????"],
    "answer": 0
  },
  {
    "question": "???????? (Apiculture) ?????????? ??? ?? ????? ??????? ?? ????????? ???? ?? ?",
    "options": ["???", "???", "????", "???"],
    "answer": 0
  },
  {
    "question": "??????? ????? ?? ??????????? ???? ?? : ???? ????? ???? ?? ?",
    "options": ["??????????", "??????????", "????????", "??????????"],
    "answer": 2
  },
  {
    "question": "?????????? ??? ?? ???-?? ??? ?? ?",
    "options": [
      "???? ???? ??? ?? ???? ???? ?? - ??????? D",
      "?????? ???? ??? ?? ???? ???? ?? - ???????",
      "???? ??? ???? ??? ?? ???? ???? ?? - ??????? A",
      "?????? ??? ???? ??? ?? ???? ???? ?? - ??????"
    ],
    "answer": 1
  },
  {
    "question": "?????? ???????? ??? ?????? :",
    "options": [
      "???? ????? ??? ????????? ?? ???? ??",
      "???????? ????? ??? ????????? ?? ???? ??",
      "CO? ?? ?? ?? ???? ????????? ???? ???? ??",
      "????????? ?? ??? ??? ??? ???? ??"
    ],
    "answer": 1
  },
  {
    "question": "?? ??? ?? ??? ????? ?? ???? ???? ??? ????? ??? ?????? ?? ?????? ?? ??? ?????? ???? ?? :",
    "options": [
      "???????? ?? ????????",
      "?????????? ?? ????????",
      "?????? ?? ????",
      "?????? ?? ?????"
    ],
    "answer": 0
  },
  {
    "question": "???????? (Virus) ?????? ???????? ??? ?????????? ?????? ???? ???? ?? :",
    "options": ["????????????", "???????", "?????", "????"],
    "answer": 0
  },
  {
    "question": "'????????' ?? ?????????? ?? ??????? ???? ?? :",
    "options": ["????????", "???-???????", "????????? ????????????", "???????"],
    "answer": 1
  },
  {
    "question": "?????? ???????? (Photosynthesis) ?? ????? ??????? ???? ?? ??????? ???? ?? ?",
    "options": ["CO? ??", "H?O ??", "????? ??", "????? ?? ??? ????"],
    "answer": 1
  },
  
  {
    "question": "???????? ??? ???????? ????? ??????? ?? ??? ?????????? ??? ?? ?? ???? ???? ?? :",
    "options": ["???????", "??????? C", "???????", "???????"],
    "answer": 3
  },
  {
    "question": "????? ??? ??, '?? ????? ??????????? ??? ?? ?? ????? ?? ?? ?? ????? ?? ????? ?? ????? ???? ???? ?? ?'",
    "options": ["?????????", "??????????", "????????", "??????"],
    "answer": 3
  },
  {
    "question": "??? ???? ?? ?????? ??? ???? ?? ?? ?? ???????? ???? ??, ?? ?? :",
    "options": ["????", "??????????", "??", "?????"],
    "answer": 0
  },
  {
    "question": "???????-?????? ?? ??? ??? ?????????? ??? ???? ?? ????? ???? ?? :",
    "options": ["?????", "????", "????", "???????"],
    "answer": 1
  },
  {
    "question": "??? ?? ???? ??? ??? ????? ?? ?????? ???? ???? ?? :",
    "options": [
      "??????? ??? ????-????? ?? ???? ???? ?? ?????? ?? ????? ?? ???",
      "??? ?? ??? ?? ???????? ????",
      "?? ???? ?? ?????? ?? ???",
      "??????? ?? ????? ?? ???? ?? ???? ?? ???"
    ],
    "answer": 2
  },
  {
    "question": "'???????' ??????? ?? ?? ???? ?? ????? ????? ?? :",
    "options": [
      "?????? ??? ????? ?? ???? ??",
      "???? ?? ??????? ????? ?? ????? ??",
      "????????? ?? ???? ??",
      "?????? ??? ????? ??"
    ],
    "answer": 0
  },
  {
    "question": "????????? ??????? ??? CD ??????? ?? ?????? ????? ??? ???? ???? ?? ?",
    "options": [
      "????????? ?????",
      "??????????? ?????",
      "?????????????? ????",
      "??????????? ????"
    ],
    "answer": 0
  },
  {
    "question": "?????? ???????? ??? ????? ?????? ?????????? ??? ?? ???-?? ??? ????? ?? ???? ?? ?",
    "options": ["???????", "???????", "?????? ???-???????", "????? ???-???????"],
    "answer": 2
  },
  {
    "question": "????? ?????????? ??? ?? ??? ???? ?? ??????? ???? ?? ?",
    "options": ["?????????", "?????", "??????", "????????"],
    "answer": 2
  },
  {
    "question": "????? ???? ???? ?? ?",
    "options": ["???? ????? ???", "???? ???", "????? ???", "??????? ???"],
    "answer": 1
  },
  
  {
    "question": "???????????? ???? ????? ?? ??? ???? ?? ????? ??? ???? ???? ?? ?",
    "options": ["???? ??", "????? ??", "???????? ??", "????? ??"],
    "answer": 0
  },
  {
    "question": "????????? ?? ????? ??? (Main Board) ??????? ?? :",
    "options": ["??? ?????", "???? ?????", "?? ?????", "????? ?? ??? ????"],
    "answer": 0
  },
  {
    "question": "?????????? ??? ?? ??? ??????? ???????? ?????? ???? ??? ?",
    "options": ["???? - ??????", "????? - ??????", "???? - ??????", "????????? - ??????"],
    "answer": 0
  },
  {
    "question": "?? ??????????, ?? ???-??? ???????? ?? ??? ???????? ??? ??? ???? ???, ?????? ??? :",
    "options": ["??????", "??????", "??????", "?????"],
    "answer": 3
  },
  {
    "question": "????????? ??? ????? ???? ???? '?? ?? ???' ?????????? ?? ???? ?? :",
    "options": ["????????", "???? ???????", "??????", "??????"],
    "answer": 3
  },
  {
    "question": "?????????? '??' ????? ?????????? ??? ?? ??? ??? ???? ????????? ?? ?",
    "options": ["???????", "????", "???????? ??????", "??????"],
    "answer": 3
  },
  {
    "question": "?? ??????? ????? ??? 60 ??? ??? 230 ????? ????????? ?? ? ??? 1 ????? (kWh) ?? ????? 1.25 ???? ??, ?? 8 ????? ?? ???? ????? ???? ?? ????? ???? ???? ?",
    "options": ["1.25 ??.", "0.60 ??.", "0.40 ??.", "0.20 ??."],
    "answer": 1
  },
  {
    "question": "?????????? ??? ?? ???-?? ?????? ??????? (Polarised) ???? ?? ?? ???? ??? ?",
    "options": ["???? ??????", "?????? ??????", "????? ??????", "?????? ??????"],
    "answer": 2
  },
  {
    "question": "???? ???? ????? ?? :",
    "options": [
      "????? ???? ??",
      "???????? ??? ?? ?????? ???? ??",
      "???????? ???? ?? ??? ?????? ??",
      "?????? ???? ?? ???? ?? ???? ??"
    ],
    "answer": 3
  },
  {
    "question": "'?????? ?? ????' ???? ???? ??? ?",
    "options": ["??? ?????", "??????", "????", "?????"],
    "answer": 1
  },
  
  {
    "question": "????? ??? ???? ?? :",
    "options": [
      "?????? ?????? ?? ???? ???? ?? ??? ???? ???? ??",
      "?????? ??????? ?? ???? ???? ?? ??? ???? ???? ??",
      "?????? ??????????? ?? ???? ???? ?? ??? ???? ???? ??",
      "???? ?? ????????? ???? ??"
    ],
    "answer": 0
  },
  {
    "question": "???? ?? ???????? ??? ????? ????? ?? :",
    "options": [
      "?????????? ?????? ??? ??????? ??????",
      "???????? ?????? ??? ???????? ??????",
      "???? ?????? ???? ??, ???????? ?????? ???? ??",
      "???? ?????? ???? ??, ???????? ???? ???? ??"
    ],
    "answer": 0
  },
  {
    "question": "????? ??? ??? ???? ?? ??? ?? ???? ?? :",
    "options": ["???????", "???????", "??????? ?? ???????", "????????? ??? ?? ??? ????"],
    "answer": 1
  },
  {
    "question": "?????? ???? ??? :",
    "options": ["?????", "??????", "?????", "????? ?? ??? ????"],
    "answer": 2
  },
  {
    "question": "???? ???? ??? ???-?? ???? ????? ?????? ???? ???? ???? ?? ?",
    "options": ["A+", "B+", "AB+", "O+"],
    "answer": 1
  },
  {
    "question": "??? ??????? (?) ?? ????? ????? ?? ?",
    "options": ["?????? ?????? ??", "???????? ??", "WHO ??", "??????? ??"],
    "answer": 0
  },
  {
    "question": "??? ???? ?? ??????????? ???? ?? ?????? ?? ???? ???, ?? ???-?? ??? ?????? ?? ?",
    "options": ["?????????", "???????", "?????", "????????? ??? ?? ??? ????"],
    "answer": 0
  },
  {
    "question": "??????? ????? ???? ?? :",
    "options": ["???? ?? ??? ???", "???? ?? ??? ???", "????????? ????? ?? ??? ???", "????? ?? ??? ????"],
    "answer": 1
  },
  {
    "question": "??? ?? ???? ???-?? ??????????? ???",
    "options": ["???????? ???????????", "????? ???????????", "?????", "????????? ??? ?? ??? ????"],
    "answer": 0
  },
  {
    "question": "?????????? ??? ?? ????? ???? ???? ???? ??? ??????? ??????????? ?? ?",
    "options": ["??????", "???", "?????", "?????"],
    "answer": 0
  },
  
  {
    "question": "???? ?????? ??? ??? ??? ???? ?? ?????? ???? ?? ?",
    "options": ["???? ????", "????? ????", "??????? ????", "???????? ????"],
    "answer": 0
  },
  {
    "question": "?????????? ??? ?? ???-?? ??? ?? ?????? ???? ?? ?",
    "options": ["??? ????", "?????????????", "????? ?????", "?????? ????"],
    "answer": 3
  },
  {
    "question": "?? ??????? ?? ???? ?? ??????? ?? ??????? ??? ?? ????? ?? ? ??????? ???? ?? ??? ?????? ???? ?? ??? ?? ??? ?????????? ???? :",
    "options": ["90°", "45°", "60°", "0°"],
    "answer": 1
  },
  {
    "question": "??? ?? ???? ?? ????? ???? ?? :",
    "options": [
      "???? ?? ???????? ?? ??????",
      "???? ?? ?????? ?? ??? ????",
      "????? ???? ?? ???? ?? ??????? ?? ????",
      "?????? ?????? ?? ???? ?? ??? ??? ????"
    ],
    "answer": 2
  },
  {
    "question": "??? ?? ??? ??? ???? ??? ??? ???? ?? ???? ????? ????? ?? ???? ??, ?? ????? ???? ?? ???? ???? ?? ?",
    "options": ["??????? ????", "???????? ????", "?????? ????", "???????? ????"],
    "answer": 0
  },
  {
    "question": "????? ?? ???????? ?????? ?? ????? ?? ????? ?? ??? ??? ?? ????? ??? ???????? ???? ??? ????? ?????? ???? ?? ?",
    "options": ["??????", "??????", "???? ???????", "??????? ???????"],
    "answer": 2
  },
  {
    "question": "'????' ??? ???? ??? ?????? ???? ?? ?",
    "options": ["??? ????", "????? ????", "????? ????", "???? ????"],
    "answer": 1
  },
  {
    "question": "?? ?????? ?? ???? ???? ???? ??, ?? ???? ?? ?? ????? ???? ??, ??????? :",
    "options": [
      "?????? ????? ???? ?? ??? ?? ???? ??",
      "???? ????? ???? ??????? ?? ??????? ?????? ???? ???? ??",
      "???? ???? ????? ??? ?? ???? ?????? ??",
      "???????? ?????? ?? ????? ??? ?????? ??????????? ???? ??"
    ],
    "answer": 3
  },
  {
    "question": "???? ??? ??????????? ?? ????? ?? :",
    "options": ["??????? ?? ??????", "???????? ?? ???", "????????? ?? ??????", "??? ?? ??????"],
    "answer": 0
  },
  {
    "question": "????? ??? ???????? ?? ??? ????? ?????? ?? ?? ?",
    "options": ["??. ????????", "???????? ??????", "??. ?????????", "??.??. ???"],
    "answer": 2
  }
  
  
];

function anonymizePreviousYouEntry() {
  let leaderboard49 = JSON.parse(localStorage.getItem("leaderboard49") || "[]");

  const existingNames = leaderboard49.map(e => e.name);
  leaderboard49 = leaderboard49.map(entry => {
    if (entry.name === "you") {
      return { ...entry, name: generateUniqueRandomName(existingNames) };
    }
    return entry;
  });

  localStorage.setItem("leaderboard49", JSON.stringify(leaderboard49));
}

window.onload = () => {
  anonymizePreviousYouEntry();
  const saved = JSON.parse(localStorage.getItem("quizUser49"));

  if (!localStorage.getItem("consentGiven49")) {
    document.getElementById("consentScreen49").classList.remove("hidden");
    return;
  }

  if (saved && saved.completed) {
    showResultPage(saved);
  } else if (saved && !saved.completed && typeof saved.currentQuestion === "number") {
    document.getElementById("continueModal49").classList.remove("hidden");
  } else {
    document.getElementById("quizPage49").classList.remove("hidden");
    showQuestion();
  }
};

function acceptConsent() {
  const checkbox = document.getElementById("consentCheckbox");
  const consentLabel = document.querySelector(".consent-box"); // label ?? class ?????? ??

  if (!checkbox.checked) {
    consentLabel.classList.add("shake-error");

    setTimeout(() => {
      consentLabel.classList.remove("shake-error");
    }, 4900);

    return;
  }

  // ? ??? ??? ???? ??? ?? ?? proceed ????
  localStorage.setItem("consentGiven49", "true");
  document.getElementById("consentScreen49").classList.add("hidden");

  const saved = JSON.parse(localStorage.getItem("quizUser49"));
  if (saved && !saved.completed && typeof saved.currentQuestion === "number") {
    document.getElementById("continueModal49").classList.remove("hidden");
  } else {
    document.getElementById("quizPage49").classList.remove("hidden");
    showQuestion();
  }
}

function generateLeaderboard49(userScorePercent) {
  const namesFemale = ["?????", "????????", "?????", "??????", "??????", "????", "??????", "?????", "????", "??????","???? ??????", "????", "????", "??????", "???", "????", "??????", "??????", "??????", "?????",
"??????", "?????", "????????", "??????", "?????? ????", "????", "??? ????", "????", "????", "????",
"???? ?????", "????", "?????? ?????", "????", "??????", "????????", "???????", "?????", "??????", "??????",
"???? ????", "??? ???", "????", "????? ????", "?????? ??????", "??????", "?????", "???? ?????", "???? ????", "???????"];
  const namesMale = ["?????? ?????", "????? ?????", "???? ????", "???? ????", "?????? ????????", "?????? ?????", "???? ??????", "???? ????", "???? ???????", "??? ??????",
"????? ????", "???? ??????", "???? ?????", "???? ??????", "????? ??????", "????? ?????", "??? ?????", "??? ?????", "???? ?????????", "??? ??????",
"?????? ??????????", "????? ???????", "???? ????", "???? ??????", "???? ??????", "?????? ??????", "????? ?????", "????? ?????", "???? ?????", "???? ?????",
"????? ???", "???? ????", "????? ?????", "???? ????????", "???? ???", "????? ????", "???? ???", "???? ???", "????? ?????", "????? ?????",
"???????? ????", "????? ????", "????? ??????", "????? ????", "????? ?????", "???? ????", "????? ????", "???? ?????", "???? ?????", "????? ??????"];
  const usedNames = new Set();

  function getRandomName() {
    let name;
    do {
      name = Math.random() < 0.8
        ? namesFemale[Math.floor(Math.random() * namesFemale.length)]
        : namesMale[Math.floor(Math.random() * namesMale.length)];
    } while (usedNames.has(name));
    usedNames.add(name);
    return name;
  }

  function getRandomScore() {
    return Math.floor(Math.random() * 49) + 60; // 60 to 90
  }

  let randomUsers = Array.from({ length: 9 }, () => ({
    name: getRandomName(),
    score: getRandomScore()
  }));

  let leaderboard49, userRank;

  if (userScorePercent >= 60) {
    randomUsers.push({ name: "you", score: userScorePercent });
    leaderboard49 = [...randomUsers].sort((a, b) => b.score - a.score);
    userRank = leaderboard49.findIndex(user => user.name === "you") + 1;
  } else {
    // Add an extra random user to make 10 total (since 'you' is not included)
    randomUsers.push({ name: getRandomName(), score: getRandomScore() });
    leaderboard49 = [...randomUsers].sort((a, b) => b.score - a.score);
    userRank = Math.floor(Math.random() * (2000 - 500 + 1)) + 500; // Random rank 5002000
  }

  const top10 = leaderboard49.slice(0, 10);
  return { top10, userRank };
}

function generateUniqueRandomName(usedNames) {
  const allNames = ["?????", "????????", "?????", "??????", "??????", "????", "??????", "?????", "????", "??????","???? ??????", "????", "????", "??????", "???", "????", "??????", "??????", "??????", "?????",
"??????", "?????", "????????", "??????", "?????? ????", "????", "??? ????", "????", "????", "????",
"???? ?????", "????", "?????? ?????", "????", "??????", "????????", "???????", "?????", "??????", "??????",
"???? ????", "??? ???", "????", "????? ????", "?????? ??????", "??????", "?????", "???? ?????", "???? ????", "???????", "?????? ?????", "????? ?????", "???? ????", "???? ????", "?????? ????????", "?????? ?????", "???? ??????", "???? ????", "???? ???????", "??? ??????",
"????? ????", "???? ??????", "???? ?????", "???? ??????", "????? ??????", "????? ?????", "??? ?????", "??? ?????", "???? ?????????", "??? ??????",
"?????? ??????????", "????? ???????", "???? ????", "???? ??????", "???? ??????", "?????? ??????", "????? ?????", "????? ?????", "???? ?????", "???? ?????",
"????? ???", "???? ????", "????? ?????", "???? ????????", "???? ???", "????? ????", "???? ???", "???? ???", "????? ?????", "????? ?????",
"???????? ????", "????? ????", "????? ??????", "????? ????", "????? ?????", "???? ????", "????? ????", "???? ?????", "???? ?????", "????? ??????"];
  let name;
  do {
    name = allNames[Math.floor(Math.random() * allNames.length)];
  } while (usedNames.includes(name));
  return name;
}


function resumeQuiz() {
  const saved = JSON.parse(localStorage.getItem("quizUser49"));
  currentQuestion = saved.currentQuestion || 0;
  score = saved.score || 0;
  document.getElementById("continueModal49").classList.add("hidden");
  document.getElementById("quizPage49").classList.remove("hidden");
  showQuestion();
}

function startFresh() {
  localStorage.removeItem("quizUser49");
  document.getElementById("continueModal49").classList.add("hidden");
  currentQuestion = 0;
  score = 0;
  document.getElementById("quizPage49").classList.remove("hidden");
  showQuestion();
}

function showResultPage(data) {
  document.getElementById("quizPage49").classList.add("hidden");
  document.getElementById("resultPage49").classList.remove("hidden");

   const scorePercent = data.score;

  // Set Score Data
  document.getElementById("finalScore49").textContent = `${scorePercent} %`;
  document.getElementById("completion49").textContent = `${scorePercent}%`;
  document.getElementById("totalQ49").textContent = data.total;
  document.getElementById("correct49").textContent = data.correct;
  document.getElementById("wrong49").textContent = data.total - data.correct;

  // Review Section
  const review = data.review.map((q, i) => `
    <p><strong>Q${i + 1} :</strong> ${q.question}<br/>
    <span class="text-blue-700">? ??? ????? : ${q.correct}</span></p>
  `).join("<hr class='my-2'/>");
  document.getElementById("answerReview49").innerHTML = review;

  // ?? NEW: Use updated generateLeaderboard logic
  const { top10, userRank } = generateLeaderboard49(scorePercent);

  // Render Rank
  document.getElementById("userRank49").textContent = `??? ???? ???? : ${userRank}`;

  // Render Top 10 Leaderboard
  const usedNames = [];
  const leaderboardHTML = top10.map((entry, i) => {
    const isYou = entry.name === "you";
    const name = isYou ? "you" : generateUniqueRandomName(usedNames);
    usedNames.push(name);
    return `
      <div class="flex justify-between items-center px-3 py-1 rounded ${isYou ? 'bg-yellow-100 font-bold' : ''}">
        <div class="w-6 text-left text-gray-700">${i + 1}.</div>
        <div class="flex-1 text-center text-purple-800">${name}</div>
        <div class="text-sm bg-purple-500 text-white px-2 py-1 rounded-full">${entry.score} %</div>
      </div>
    `;
  }).join("");
  document.getElementById("topLeaderboard49").innerHTML = `<strong class="block mb-2">?? Top 10 Leaderboard</strong>${leaderboardHTML}`;

  // ?? Save History
  let history = JSON.parse(localStorage.getItem("scoreHistory49") || "[]");
  history.unshift({ score: scorePercent, date: new Date().toLocaleString() });
  history = history.sort((a, b) => b.score - a.score).slice(0, 5);
  localStorage.setItem("scoreHistory49", JSON.stringify(history));

  document.getElementById("scoreHistory49").innerHTML = 
    `<strong class="text-sl block mb-2">???? ????? ???????? (Top 5)</strong>
     <div class="space-y-3">
       ${history.map((h, i) => {
         const badgeClass = getScoreBadge(h.score);
         const isBest = h.score === Math.max(...history.map(x => x.score));
         return `
           <div class="bg-white border border-purple-300 rounded-xl p-4 shadow-md flex justify-between items-center">
             <div>
               <p class="font-semibold text-purple-800">Attempt ${i + 1}</p>
               <p class="text-sm text-gray-600 mt-1">${h.date}</p>
               ${isBest ? `<span class="inline-block mt-1 text-xs text-green-700 font-semibold">?? Best Attempt</span>` : ""}
             </div>
             <div class="px-4 py-1 rounded-full text-sm font-bold shadow ${badgeClass}">${h.score}%</div>
           </div>
         `;
       }).join("")}
     </div>`;

  // ?? Confetti
  confetti({
    particleCount: 150,
    spread: 100,
    origin: { y: 0.2 }
  });
}

 
function getScoreBadge(score) {
  if (score >= 90) return 'bg-green-600 text-white';
  if (score >= 70) return 'bg-yellow-500 text-white';
  return 'bg-red-500 text-white';
}

function getProcessedLeaderboard49() {
  const rawData = JSON.parse(localStorage.getItem('leaderboard49') || '[]');
  const processed = [];
  const usedNames = [];

  rawData.forEach(entry => {
    if (entry.name === 'you') {
      processed.push({ name: 'you', score: entry.score });
    } else {
      let randomName = generateRandomName(usedNames);
      usedNames.push(randomName);
      processed.push({ name: randomName, score: entry.score });
    }
  });

  return processed.sort((a, b) => b.score - a.score);
}

function submitAnswer() {
  currentQuestion++;
  const progress = { currentQuestion, score, total: questions.length, completed: false };
  localStorage.setItem("quizUser49", JSON.stringify(progress));

  if (currentQuestion >= questions.length) {
    const review = questions.map(q => ({ question: q.question, correct: q.options[q.answer] }));
    const result = { completed: true, correct: score, score: Math.round((score / questions.length) * 100), total: questions.length, review };
    let leaderboard49 = JSON.parse(localStorage.getItem("leaderboard49") || "[]");
leaderboard49 = leaderboard49.filter(entry => entry.name !== "you");
leaderboard49.push({ name: "you", score: Math.round((score / questions.length) * 100) });
leaderboard49.sort((a, b) => b.score - a.score);
localStorage.setItem("leaderboard49", JSON.stringify(leaderboard49));

// Update current rank
const rank = leaderboard49.findIndex(entry => entry.name === "you") + 1;
document.getElementById("userRank49").textContent = `??? ???? ???? : ${rank}`;
    score = Math.round((score / questions.length) * 100);
    localStorage.setItem("quizUser49", JSON.stringify(result));
    showResultPage(result);
  } else {
    showQuestion();
  }
}

function saveScoreToLeaderboard49(score) {
  const leaderboard49 = JSON.parse(localStorage.getItem('leaderboard49') || '[]');

  // ????? 'you' ?? random ??? ???? ??? ???? (???? ?? ????? ?? ????)
  leaderboard49.forEach(entry => {
    if (entry.name === 'you') {
      entry.name = generateRandomName(leaderboard49.map(e => e.name));
    }
  });

  // ?? ??? 'you' add ????
  leaderboard49.push({ name: 'you', score });

  localStorage.setItem('leaderboard49', JSON.stringify(leaderboard49));
}

function showQuestion() {
  clearInterval(timer);
  timeLeft = 30;
  const timerEl = document.getElementById("timer49");
  timerEl.classList.remove("blink");
  timerEl.textContent = `${timeLeft}s`;

  timer = setInterval(() => {
    timeLeft--;
    timerEl.textContent = `${timeLeft}s`;

    if (timeLeft <= 15) {
      timerEl.classList.add("blink");
    }

    if (timeLeft <= 0) {
      clearInterval(timer);
      autoSubmitAnswer(); // ???? ???? ???? ?? auto-submit
    }
  }, 1000);

  const q = questions[currentQuestion];
  document.getElementById("questionCounter49").textContent = `Q ${currentQuestion + 1}/${questions.length}`;

  const questionTextEl = document.getElementById("questionText");
  
  // ?? Reset zoom animation
  questionTextEl.classList.remove("zoom-out");
  void questionTextEl.offsetWidth; // Force reflow
  questionTextEl.textContent = q.question;
  questionTextEl.classList.add("zoom-out");

  const container = document.getElementById("optionsContainer");
  container.innerHTML = "";

  q.options.forEach((opt, i) => {
    const div = document.createElement("div");
    div.className = "option";

    // ?? Apply zoom animation to options too
    setTimeout(() => {
      div.classList.add("zoom-out");
    }, 15); // Slight delay to allow DOM to render

    const optionLabel = String.fromCharCode(65 + i);
    div.innerHTML = `<strong>${optionLabel}.</strong> ${opt}`;
    div.onclick = () => selectOption(div, i, q.answer);
    container.appendChild(div);
  });

}

function autoSubmitAnswer() {
  const q = questions[currentQuestion];
  const options = document.querySelectorAll(".option");

  options.forEach(opt => opt.onclick = null); // disable all
  options[q.answer].classList.add("correct");

  const progress = { currentQuestion: currentQuestion + 1, score, total: questions.length, completed: false };
  localStorage.setItem("quizUser49", JSON.stringify(progress));

  setTimeout(() => {
    submitAnswer();
  }, 2000); // 2s delay after auto-reveal
}

function selectOption(elem, selected, correct) {
  clearInterval(timer);
  const options = document.querySelectorAll(".option");
  options.forEach(opt => opt.onclick = null);
  if (selected === correct) {
    elem.classList.add("correct");
    score++;
  } else {
    elem.classList.add("wrong");
    options[correct].classList.add("correct");
  }

  // ? ????? ???? ?? ??? ??? ?????
  const nextBtn = document.querySelector("button[onclick='submitAnswer()']");
  nextBtn.textContent = currentQuestion === questions.length - 1 ? "?? Show Result" : "Next Question ?";
}

function resetQuiz() {
  // ????? ?????? ?? ??????? ?????
  localStorage.removeItem("quizUser49");

  // ?????? ?? ????????? ????
  questions.sort(() => Math.random() - 0.5);

  // ??????? ??????? ??? ????
  currentQuestion = 0;
  score = 0;

  // ?????? ??? ?????? ?? ?????? ??? ??????
  document.getElementById("resultPage49").classList.add("hidden");
  document.getElementById("quizPage49").classList.remove("hidden");

  showQuestion(); // ???? ???? ??????
}
</script>
<script>
// ? Consent checkbox ?? ??? enable/disable ????
document.addEventListener("DOMContentLoaded", () => {
  const checkbox = document.getElementById("consentCheckbox");
  const startBtn = document.getElementById("startQuizBtn");

  checkbox.addEventListener("change", () => {
    startBtn.disabled = !checkbox.checked;
    startBtn.classList.toggle("opacity-50", !checkbox.checked);
    startBtn.classList.toggle("cursor-not-allowed", !checkbox.checked);
  });
});

// ? Start Quiz Button Handler
function startQuiz() {
  document.getElementById("consentPage49").classList.add("hidden");
  document.getElementById("quizPage49").classList.remove("hidden");
  showQuestion();
}
</script>
<script>
  window.addEventListener("load", () => {
    const loader = document.getElementById("loaderOverlay");
    if (loader) loader.style.display = "none";
  });
</script>